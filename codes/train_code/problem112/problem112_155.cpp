#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cstring>
using namespace std;

const int maxx = 100000 + 10;
struct Node {
	int key;
	Node *prev, *next;
};

Node *nil;

// ?????¨????§????
void init() {
	nil = (Node *)malloc(sizeof(Node));
	//C++ nil = new Node();
	nil->next = nil;
	nil->prev = nil;
}

// ????????¨????´¢?????????key????????? O(n)
Node* listSearch(int key) {
	// ????????¨??´??????????§???????
	Node *cur = nil->next;
	while (cur != nil && cur->key != key) {
		cur = cur->next;
	}
	return cur;
}

// ?????°?????¨
void printList() {
	Node *cur = nil->next;
	int flag = 0;
	while (cur != nil) {
		if (flag++ > 0)
			printf(" ");
		printf("%d", cur->key);
		cur = cur->next;
	}
	printf("\n");
}

// ????????????t
void deleteNode(Node *t) {
	// t?????´??????????????????
	if (t == nil)
		return;
	t->prev->next = t->next;
	t->next->prev = t->prev;
	free(t);
	//C++ delete(t);
}

// ????????´??????
void deleteFirst() {
	deleteNode(nil->next);
}

// ???????°???????
void deleteLast() {
	deleteNode(nil->prev);
}

// ???????????????key O(n)
void deleteKey(int key) {
	deleteNode(listSearch(key));
}

// ??¨?????¨??´??¨??????????´?key
void insert(int key) {
	Node *x = (Node *)malloc(sizeof(Node));
	//C++ Node *x = new Node();
	x->key = key;

	x->next = nil->next;
	nil->next->prev = x;
	nil->next = x;
	x->prev = nil;
}
int main() {
	int n, key, size = 0;
	char op[20];
	scanf("%d", &n);
	getchar();
	// ????§?????????¨
	init();
	for (int i = 0; i < n; i++) {
		scanf("%s %d", op, &key);
		if (op[0] == 'i') {
			insert(key);
			size++;
		}else {
			if (strlen(op) > 6) {
				if (op[6] == 'F') {//????????´??????
					deleteFirst();
				}else {//???????°???????
					deleteLast();
				}
			}
			else { //????????????
				deleteKey(key);
			}
			size--;
		}
	}
	printList();
	return 0;
}