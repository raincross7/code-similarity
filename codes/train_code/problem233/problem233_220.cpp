#include <bits/stdc++.h>
using namespace std;
using ll = long long;


void solve(long long N, long long K, std::vector<long long> A){
    vector<ll> sum(N+1,0);
    for(int i=0;i<N;i++){
        sum[i+1] = sum[i] + A[i];
    }
    map<ll,vector<ll>> mp;
    for(int i=0;i<N+1;i++){
        ll val = sum[i] -i;
        val %= K;
        mp[val].push_back(i);
        // cerr <<"val=" <<val <<"i="<<i << endl;
    }
    ll ans =0;
    for(auto itr = mp.begin();itr != mp.end();++itr){
        auto vec = itr->second;
        if(vec.size()==1){
            continue;
        }
        ll r =0;
        for(int i=0;i<vec.size();i++){
            while(vec[r]<vec[i] +K){
                if(r== vec.size()-1){
                    break;
                }
                r++;
            }
            if(vec[r] >= vec[i]+K){
                --ans;
            }
            ans += (r-i);
        }
    }
    cout << ans << endl;

}

// Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
    long long N;
    scanf("%lld",&N);
    long long K;
    scanf("%lld",&K);
    std::vector<long long> A(N);
    for(int i = 0 ; i < N ; i++){
        scanf("%lld",&A[i]);
    }
    solve(N, K, std::move(A));
    return 0;
}
