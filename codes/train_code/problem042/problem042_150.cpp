/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author NikuKyabe
 */

#include "bits/stdc++.h"

using namespace std;
#define int long long
#define FOR(i, a, b) for(int i=(int)(a);i<(int)(b);++i)
#define REP(i, n)  FOR(i,0,(n))


class COneStrokePath {
public:
    vector<vector<int>> v;
    int n;
    int ans = 0;

    void dfs(int s, vector<bool> seen) {
      seen[s] = true;
      for (int next_v : v[s]) {
        if (!seen[next_v])dfs(next_v, seen);
      }
      int sum = 0;
      REP(i, seen.size()) {
        if (seen[i] == true) {
          sum++;
        }
      }
      if (sum == n) {
        ans++;
      }
    }

    void solve(std::istream &in, std::ostream &out) {
      int m;
      in >> n >> m;
      v = vector<vector<int>>(n);
      REP(i, m) {
        int a, b;
        in >> a >> b;
        a--;
        b--;
        v[a].push_back(b);
        v[b].push_back(a);
      }
      vector<bool> seen(n);
      dfs(0, seen);
      out << ans << endl;
    }
};


signed main() {
  ios::sync_with_stdio(false);
  cout.tie(0);
  cout << fixed;
  COneStrokePath solver;
  std::istream &in(std::cin);
  std::ostream &out(std::cout);
  solver.solve(in, out);
  return 0;
}
