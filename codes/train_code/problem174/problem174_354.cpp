#include <bits/stdc++.h>
using namespace std;

const string YES = "POSSIBLE";
const string NO = "IMPOSSIBLE";
typedef long long ll;
template<typename T>
T gcd(T a, T b){
    if (b==0) return a;
    else return  gcd(b,a%b);
}

void solve(long long N, long long K, std::vector<long long> A){
    ll maximum = *max_element(A.begin(),A.end());
    ll gcd_A = A[0];
    for(const auto a : A){
        gcd_A = gcd(gcd_A,a);
    }
    if (K%gcd_A==0 && K <= maximum) printf("POSSIBLE\n");
    else printf("IMPOSSIBLE\n");

}

// Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
    long long N;
    scanf("%lld",&N);
    long long K;
    scanf("%lld",&K);
    std::vector<long long> A(N);
    for(int i = 0 ; i < N ; i++){
        scanf("%lld",&A[i]);
    }
    solve(N, K, std::move(A));
    return 0;
}
