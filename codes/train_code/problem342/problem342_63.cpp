/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author TM
 */


#include <iostream>
#include <algorithm>
#include <vector>
#include <string>
#include <queue>
#include <map>
#include <set>
#include <functional>
#include <cmath>
#include <numeric>

#define SIZE 100005
#define MOD 1000000007

using namespace std;

class DUnbalanced {
public:
    void solve(std::istream &cin, std::ostream &cout) {
        string s;
        cin >> s;

        if (s.size() == 1) {
            cout << "-1 -1" << endl;
            return;
        } else if (s.size() == 2) {
            if (s[0] == s[1]) {
                cout << 1 << " " << 2 << endl;
                return;
            }
        }
        for (int i = 0; i < s.size() - 2; ++i) {
            char ss = s[i];
            if (ss == s[i + 1] || ss == s[i + 2] || s[i + 1] == s[i + 2]) {
                cout << i + 1 << " " << i + 3 << endl;
                return;
            }
        }
        cout << "-1 -1" << endl;
    }
};


int main() {
    DUnbalanced solver;
    std::istream &in(std::cin);
    std::ostream &out(std::cout);
    solver.solve(in, out);
    return 0;
}
