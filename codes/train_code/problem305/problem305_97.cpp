/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author
 */

#include <iostream>
#include <fstream>

#include <iostream>
#include <fstream>

#include <string>
#include <vector>
#include <math.h>
#include <map>
#include <set>
#include <algorithm>
#include <numeric>
#include <bitset>
using namespace std;
using ll = long long;
constexpr ll INF = 1010000000000000017LL;
#define rep(i, n) for(ll i = 0; i < (ll)(n); i++)
#define all(v) v.begin(), v.end()

class AMultipleArray {
public:
	void solve(std::istream& in, std::ostream& out) {
        ll n;
        in>>n;
        vector<ll> a(n);
        vector<ll> b(n);
        rep(i,n) in>>a[i]>>b[i];
        ll cnt=0,ad=0;
        reverse(all(a));
        reverse(all(b));

        rep(i,n){
            a[i]+=cnt;
            if(a[i]%b[i]!=0){
                cnt+=(a[i]/b[i]*b[i]+b[i])-a[i];
            }
        }

        out<<cnt<<endl;



	}
};


int main() {
	AMultipleArray solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
