#include <bits/stdc++.h>
using namespace std;
#define rep(i, N) for (long long i = 0; i < N; i++)
using ll = long long;

void solve(long long N, long long M, std::vector<long long> a, std::vector<long long> b, std::vector<long long> c,
           std::vector<long long> d) {
    rep(i, N) {
        ll min_distance = 1e10;
        ll ans = 0;
        rep(j, M) {
            ll distance = abs(c[j] - a[i]) + abs(d[j] - b[i]);
            if (distance < min_distance) {
                ans = j + 1;
                min_distance = distance;
            }
        }
        cout << ans << endl;
    }
}

// Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can
// remove this line by using your custom template)
int main() {
    long long N;
    scanf("%lld", &N);
    long long M;
    scanf("%lld", &M);
    std::vector<long long> a(N);
    std::vector<long long> b(N);
    for (int i = 0; i < N; i++) {
        scanf("%lld", &a[i]);
        scanf("%lld", &b[i]);
    }
    std::vector<long long> c(M);
    std::vector<long long> d(M);
    for (int i = 0; i < M; i++) {
        scanf("%lld", &c[i]);
        scanf("%lld", &d[i]);
    }
    solve(N, M, std::move(a), std::move(b), std::move(c), std::move(d));
    return 0;
}
