#include <bits/stdc++.h>
using namespace std;
using ll=long long;
/*
5
6 9 12 10 8

2 3  4  5 1
3 4  5  1 2
1 2  3  4 5
ん？
総数 45=12345*3
3回やるとか
とれない時は操作しちゃだめ
特定箇所を複数回もありうる

5
6 9 12 10  8
9 9  9  9  9
3 0 -3  1 -1

5
4 5  1  2 3
3 3  3  3 3
1 2 -2 -1

打ち消しできればOKとか？

1234
1234
1234
1234

 4  8 12 16
10 10 10 10

1423
1423

 2  8  4  6
 5  5  5  5
-3 +3 -1 +1
そうでもないな
全探索するのが楽なんだが間に合うわけが無い
N^2くらい？かなり近いっちゃちかい

12345
12345
12345

3 6 9 12 15

51234
7 5 8 11 14
45123
+33-222
+222-33
+1111-4
変数N個の連立方程式なん

5
6 9 12 10 8

x1x2x3x4x5

x1*5+x2*4+x3*3+x4*2+x5*1=6
x1*1+x2*5+...           =9

e=6 -5a-4b-3c-2d
a=9 -   5b-4c-3d-2e
b=12-2a   -5c-4d-3e
c=10-3a-2b   -5d-4e
d=8 -4a-3b-2c-  -5e
みたすくみあわせを全通り探す？そんなんあるかな
最大40000回くらい
全部10^9=40000*40000/2くらい？
総和
みつけたとして、確認するのに？N？
確認不要の方法･･･
全部総和10^9
nC2=10^9
rt2*10^9
10^4*root20
44000
これみたすのってそんななかったりするかな
5=3
113
122

ああ、差をとるのか
それで初期値ひいておいて、回数分Nを足す

5
6 9 12 10 8

3 3 -2 -2 -2
あれ、どこかたすと
4 -1 -1 -1 -1
これを3回やる
あらかじめ3をひいておいて、+5をする
0 0 -5 -5 -5

これで、3，4，5を1回ずつとわかる
負なのいやだな


5
6 9 12 10 8

-3 -3 2 2 2
+3
 0  0 5 5 5
*/
int main(){
  ll N,S=0,NN=0,k=0; cin>>N;
  NN=(N*(N+1))/2;
  vector<ll> A(N,0),B(N,0);
  for(ll i=0; i<N; i++) cin>>A[i];
  for(ll i=0; i<N; i++) S+=A[i];
  if(S%NN>0){
    cout<<"NO"<<endl;
    return 0;
  }
  k=S/NN;
  for(ll i=0; i<N; i++){
    ll n=(i<N-1)?i+1:0;
    B[i]=A[i]-A[n]+k;
  }
//for(ll i=0; i<N; i++) cout<<B[i]<<" ";
  for(ll i=0; i<N; i++){
    if(B[i]%N>0 || B[i]<0){
      cout<<"NO"<<endl;
      return 0;
    }
  }
  cout<<"YES"<<endl;
}