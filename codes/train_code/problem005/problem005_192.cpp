#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define REP(i,n) for (ll i = 0; i < (n); ++i)


void solve(long long N, std::vector<std::string> S){
    ll ans = 0;
    REP(B, N){
        vector<string> T;
        REP(i, N){
            T.push_back(
                S.at(i).substr(N - B, B) +
                S.at(i).substr(0, N - B)
            );
        }
        ll ok_flg = true;
        for(ll i = 0; i < N && ok_flg; ++i){
            for(ll j = i + 1; j < N && ok_flg; ++j){
                if(T.at(i).at(j) != T.at(j).at(i)){
                    ok_flg = false;
                }
            }
        }
        ans += ok_flg;
    }
    cout << N * ans << endl;
}

// Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools
int main(){
    long long N;
    scanf("%lld",&N);
    std::vector<std::string> S(N);
    for(int i = 0 ; i < N ; i++){
        std::cin >> S[i];
    }
    solve(N, std::move(S));
    return 0;
}
