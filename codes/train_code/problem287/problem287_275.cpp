/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author
 */

#include <cstdio>
#include <cstring>
#include <cmath>
#include <utility>
#include <iostream>
#include <functional>
#include <bitset>
#include <algorithm>
#include <vector>
#include <forward_list>
#include <set>
#include <map>
#include <queue>
#include <deque>
#include <stack>
#include <numeric>
#define ll long long int
#define rep(i,n) for(int i=0;i<(n);i++)
#define pb push_back
using namespace std;
int mx4[] = {0,1,0,-1};
int my4[] = {1,0,-1,0};
int mx2[] = {1,0};
int my2[] = {0,1};

class C {
public:
	void solve(istream& in, ostream& out) {
	    int n;
	    in >> n;
	    vector<ll> v(n),a,b;
	    rep(i,n){
	        in >> v[i];
	        v[i]--;
	    }
	    for(int i=0;i<n;i+=2) a.pb(v[i]);
	    for(int i=1;i<n;i+=2) b.pb(v[i]);

	    vector<pair<ll,ll>> ap(1e5+5),bp(1e5+5);
	    rep(i,1e5){
	        ap[i].first = 0; ap[i].second = 0;
	        bp[i].first = 0; bp[i].second = 0;
	    }


	    for(int i=0;i<n/2;i++){
	        ap[a[i]].first++;
	        ap[a[i]].second = a[i];
	        bp[b[i]].first++;
	        bp[b[i]].second = b[i];
	    }
	    sort(ap.rbegin(),ap.rend());
	    sort(bp.rbegin(),bp.rend());

	    ll ans = 0;
	    if(ap[0].second != bp[0].second){
            for(int i=1;i<1e5+5;i++){
                ans += ap[i].first;
                ans += bp[i].first;
            }
	    }else{
	        if(ap[0].first > bp[0].first){
	            for(int i=1;i<1e5+5;i++) ans += ap[i].first;
	            ans += bp[0].first;
	            for(int i=2;i<1e5+5;i++) ans += bp[i].first;
	        }else if(bp[0].first > ap[0].first){
                for(int i=1;i<1e5+5;i++) ans += bp[i].first;
                ans += ap[0].first;
                for(int i=2;i<1e5+5;i++) ans += ap[i].first;
	        }else{
	            if(ap[1].first > bp[1].first){
	                ans += ap[0].first;
                    for(int i=2;i<1e5+5;i++) ans += ap[i].first;
                    for(int i=1;i<1e5+5;i++) ans += bp[i].first;
	            }else{
                    ans += bp[0].first;
                    for(int i=2;i<1e5+5;i++) ans += bp[i].first;
                    for(int i=1;i<1e5+5;i++) ans += ap[i].first;
	            }
	        }
	    }
	    out << ans << endl;
	}
};

int main() {
	C solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}