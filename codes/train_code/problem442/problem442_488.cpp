#include <bits/stdc++.h>
using namespace std;

const string YES = "YES";
const string NO = "NO";

int solve(std::string S)
{
    string T;
    long long ssize = S.size();

    for (int i = ssize - 1; i > 0;)
    {
        if (S[i] == 'm' && i >= 4)
        {
            if (S.substr(i - 4, 5) == "dream")
            {
                T = "dream" + T;
                i = i - 5;
            }
            else
            {
                cout << "NO" << endl;
                return 0;
            }
        }
        else if (S[i] == 'e' && i >= 4)
        {
            if (S.substr(i - 4, 5) == "erase")
            {
                T = "erase" + T;
                i = i - 5;
            }
            else
            {
                cout << "NO" << endl;
                return 0;
            }
        }
        else if (S[i] == 'r')
        {
            if (S[i - 5] == 'e' && i >= 5)
            {
                if (S.substr(i - 5, 6) == "eraser")
                {
                    T = "eraser" + T;
                    i = i - 6;
                }
                else
                {
                    cout << "NO" << endl;
                    return 0;
                }
            }
            else if (S[i - 6] == 'd' && i >= 6)
            {
                if (S.substr(i - 6, 7) == "dreamer")
                {
                    T = "dreamer" + T;
                    i = i - 7;
                }
                else
                {
                    cout << "NO" << endl;
                    return 0;
                }
            }
            else
            {
                cout << "NO" << endl;
                return 0;
            }
        }
        else
        {
            cout << "NO" << endl;
            return 0;
        }
    }

    if (S.size() == T.size())
    {
        cout << "YES" << endl;
    }
    else
    {
        cout << "NO" << endl;
    }

    return 0;
}

// Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main()
{
    std::string S;
    std::cin >> S;
    solve(S);
    return 0;
}
