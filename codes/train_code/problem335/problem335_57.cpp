#include <iostream>
#include <algorithm>
#include <string>
#include <vector>
#include <climits>
#include <cmath>
#include <map>
#include <queue>
#include <iomanip>
#include <set>
using namespace std;

#define rep(i,n) for(ll (i)=0;(i)<(n);(i)++ )
#define repf(i,m,n) for(ll (i)=m;(i)<n;(i)++)
#define all(v) (v).begin(), (v).end()
#define ll long long
#define vec(name,num) vector<ll> name((num),0);
#define op(i) cout<<(i)<<endl;
#define opf(i) cout<<fixed<<setprecision(10)<<(i)<<endl;
#define ip(i) cin>>(i);
#define opN cout<<"No"<<endl;
#define opY cout<<"Yes"<<endl;
#define opP cout<<"Possible"<<endl;
#define opI cout<<"Impossible"<<endl;
#define mat(name,fnum,snum); vector<vector<ll>> name((fnum),vector<ll>((snum),0));
#define matC(name,fnum,snum); vector<vector<char>> name((fnum),vector<char>((snum),0));
#define debugP int debug_point; cin>>debug_point;
#define FI first
#define SE second
const ll MOD= 1e9 + 7;

////const long long MOD = 1000000007;
//
void solve(long long N, std::string S){
  vec(a,2*N);
  ll tmp=0;
  rep(i,2*N){
    if(tmp==0){
      if(S[i]=='B'){
        tmp++;
        a[i]=1;
      }else{
        op(0)
        return;
      }
    }else if(tmp%2){
      if(S[i]=='W'){
        tmp++;
        a[i]=1;
      }else{
        tmp--;
        a[i]=0;
      }
    }else if(tmp%2==0){
      if(S[i]=='W'){
        tmp--;
        a[i]=0;
      }else {
        tmp++;
        a[i]=1;
      }
    }
  }
  if(tmp!=0){
    op(0)
    return;
  }
  
  ll cnt=0;
  ll ans=1;
  rep(i,2*N){
    //op(a[i])
    if(a[i]==0){
      ans*=cnt;
      cnt--;
      ans%=MOD;
    }else{
      cnt++;
    }
  }
  repf(i,1,N+1){
    ans*=i;
    ans%=MOD;
  }
  op(ans)
}

// Generated by 1.1.4 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
    long long N;
    scanf("%lld",&N);
    std::string S;
    std::cin >> S;
    solve(N, S);
    return 0;
}
