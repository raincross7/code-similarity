#include <bits/stdc++.h>
using namespace std;
using ll = long long;

void solve(long long N, long long K, std::vector<long long> V)
{
    // dp[左からi個目の宝石まで取った][右からj個目の宝石まで取った][k個の宝石を戻した] = 所持
    vector<vector<vector<ll>>> dp(N + 1, vector<vector<ll>>(N + 1, vector<ll>(N + 1)));

    for (ll i = 0; i < N; i++) {
        for (ll j = 0; j < N; j++) {
            if (i + j >= K || i + j >= N) {
                continue;
            }
            dp[i + 1][j][0] = dp[i][j][0] + V[i];
            dp[i][j + 1][0] = dp[i][j][0] + V[N - j - 1];
        }
    }
    for (ll i = 0; i <= N; i++) {
        for (ll j = 0; j <= N; j++) {
            if (i + j >= K || i + j >= N) {
                continue;
            }
            vector<ll> jewels;
            copy(begin(V), begin(V) + i, back_inserter(jewels));
            copy(end(V) - j, end(V), back_inserter(jewels));
            sort(begin(jewels), end(jewels));
            for (ll k = 0; k < N && k < jewels.size(); k++) {
                if (i + j + k < K) {
                    dp[i][j][k + 1] = dp[i][j][k] - jewels[k];
                }
            }
        }
    }

    ll ans = 0;
    for (ll i = 0; i <= N; i++) {
        for (ll j = 0; j <= N; j++) {
            for (ll k = 0; k <= N; k++) {
                ans = max(ans, dp[i][j][k]);
            }
        }
    }
    cout << ans << endl;
}

// Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
// clang-format off
int main(){
    long long N;
    scanf("%lld",&N);
    long long K;
    scanf("%lld",&K);
    std::vector<long long> V(N);
    for(int i = 0 ; i < N ; i++){
        scanf("%lld",&V[i]);
    }
    solve(N, K, std::move(V));
    return 0;
}
