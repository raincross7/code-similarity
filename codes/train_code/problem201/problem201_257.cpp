#include <bits/stdc++.h>
using namespace std;

bool comp(pair<long long,long long > x,pair<long long,long long> x1){
  return x.second+x.first<x1.second+x1.first;
}
void solve(long long N, std::vector<long long> A, std::vector<long long> B) {
      vector<pair<long long,long long>> tmp;
    for(int i = 0;i<N;i++){tmp.push_back(make_pair(A[i],B[i]));}
      sort(tmp.begin(),tmp.end(),comp);
    reverse(tmp.begin(),tmp.end());
    long long  tmp1 = 0;
    long long  tmp2 = 0;
    for(int i =0;i<N;i++){
      if((i+1)%2 == 1)tmp1+=tmp[i].first;
      else tmp2+=tmp[i].second;
    }
    cout<<tmp1-tmp2;
}


// Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You
// use the default template now. You can remove this line by using your custom
// template)
int main() {
  long long N;
  scanf("%lld", &N);
  std::vector<long long> A(N);
  std::vector<long long> B(N);
  for (int i = 0; i < N; i++) {
    scanf("%lld", &A[i]);
    scanf("%lld", &B[i]);
  }
  solve(N, std::move(A), std::move(B));
  return 0;
}