/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author CompuWare
 */

#include <iostream>
#include <fstream>

#include <bits/stdc++.h>

using namespace std;

class CAntiDivision {
public:
    void solve(std::istream &in, std::ostream &out) {
        int64_t A, B, C, D;
        in >> A >> B >> C >> D;

        int64_t R = C / __gcd(C, D) * D;

        int64_t res1 = (B - A + 1) - (B / C - (A - 1) / C);
        int64_t res2 = (B - A + 1) - (B / D - (A - 1) / D);
        int64_t res3 = (B - A + 1) - (B / R - (A - 1) / R);
        out << (res1 + res2 - res3);

    }
};


int main() {
    CAntiDivision solver;
    std::istream &in(std::cin);
    std::ostream &out(std::cout);
    solver.solve(in, out);
    return 0;
}
