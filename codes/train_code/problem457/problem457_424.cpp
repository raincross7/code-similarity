#include <bits/stdc++.h>
using namespace std;
using ll = long long;

void solve(long long N, long long M, std::vector<long long> A, std::vector<long long> B)
{
    vector<vector<ll>> baito(M);
    for (ll i = 0; i < N; i++) {
        // ○日後に報酬を得られるから、○日目までにやれば報酬を得られるに変更
        if (M - A[i] >= 0) {
            baito[M - A[i]].push_back(B[i]);
        }
    }

    priority_queue<ll> que;
    ll ans = 0;
    for (ll i = M - 1; i >= 0; i--) {
        for (auto reward : baito[i]) {
            que.push(reward);
        }

        if (!que.empty()) {
            ans += que.top();
            que.pop();
        }
    }
    cout << ans << endl;
}

// Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
// clang-format off
#pragma GCC diagnostic ignored "-Wunused-result"
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    long long N;
    scanf("%lld",&N);
    long long M;
    scanf("%lld",&M);
    std::vector<long long> A(N);
    std::vector<long long> B(N);
    for(int i = 0 ; i < N ; i++){
        scanf("%lld",&A[i]);
        scanf("%lld",&B[i]);
    }
    solve(N, M, std::move(A), std::move(B));
    return 0;
}
