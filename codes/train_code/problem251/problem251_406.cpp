#include <bits/stdc++.h>
#define FOR(i, a, b) for (int i = (a); i <= (b); i++)
#define rep(i, n) FOR(i, 0, n - 1)
using namespace std;
typedef long long ll;
template <class T> inline bool dpmin(T &a, T b) {
  if (a > b) {
    a = b;
    return 1;
  }
  return 0;
}
template <class T> inline bool dpmax(T &a, T b) {
  if (a < b) {
    a = b;
    return 1;
  }
  return 0;
}

void solve(long long N, vector<long long> H) {

    /* long cnt=0; */
    /* long maxcnt=0; */
    /* for (long i=1; i<n; i++) { */
    /*     if (h.at(i)<=h.at(i-1)) { */
    /*         cnt++; */
    /*         maxcnt=max(maxcnt, cnt); */
    /*     } else { */
    /*         cnt=0; */
    /*     } */
    /* } */
    /* cout << maxcnt << endl; */

    ll ans = 0;
    ll ans_max = 0;
    for (ll i=0; i<N-1; i++) {
        if (H[i]>=H[i+1]) {
            ans++;
            ans_max = max(ans_max, ans);
        } else {
            ans = 0;
        }
    }

    cout << ans_max << endl;
}

// Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips:
// You use the default template now. You can remove this line by using your
// custom template)
int main() {
  long long N;
  cin >> N;
  vector<long long> H(N);
  for (int i = 0; i < N; i++) {
    cin >> H[i];
  }
  solve(N, move(H));
  return 0;
}
