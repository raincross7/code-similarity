#include <bits/stdc++.h>
using namespace std;

const long long MOD = 2;

void solve(long long N, long long P, std::vector<long long> A) {
    long long oddCnt = 0, evenCnt = 0;
    for (long long i = 0; i < N; i++) {
        if (A[i] % 2 == 1) {
            oddCnt++;
        } else {
            evenCnt++;
        }
    }
    if (evenCnt == N) {
        if (P == 1) {
            cout << 0 << endl;
            return;
        } else {
            printf("%lld", (long long)pow(2, N));
            return;
        }
    }
    if (oddCnt == N) {
        if (P == 1) {
            printf("%lld\n", (long long)pow(2, N - 1));
            return;
        } else {
            printf("%lld\n", (long long)pow(2, N - 1));
            return;
        }
    }
    if (P == 1) {
        printf("%lld\n", (long long)pow(2, oddCnt - 1) * (long long)pow(2, evenCnt));
        return;
    } else {
        printf("%lld\n", (long long)pow(2, oddCnt - 1) * (long long)pow(2, evenCnt));
        return;
    }
}

// Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can
// remove this line by using your custom template)
int main() {
    long long N;
    scanf("%lld", &N);
    long long P;
    scanf("%lld", &P);
    std::vector<long long> A(N);
    for (int i = 0; i < N; i++) {
        scanf("%lld", &A[i]);
    }
    solve(N, P, std::move(A));
    return 0;
}
