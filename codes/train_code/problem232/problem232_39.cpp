#include <bits/stdc++.h>
using namespace std;


void solve(long long N, std::vector<long long> A){
  long long count = 0;
  vector<long long> tab(N);
  map<long long, long long> counts;
  tab[0] = A[0];
  counts[A[0]]++;
  for(long long i = 1; i < N; i++){
    tab[i] = tab[i-1] + A[i];
    counts[tab[i]]++;
  }

  long long acc = 0;
  for(auto x: counts){
    acc += ((x.second <= 1) ? 0 : ((x.second*(x.second-1))/2));
  }
  acc += counts[0];

  cout << acc << endl;
}

// Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
    long long N;
  scanf("%lld",&N);
  std::vector<long long> A(N);
  for(int i = 0 ; i < N ; i++){
    scanf("%lld",&A[i]);
  }
    solve(N, std::move(A));
    return 0;
}
