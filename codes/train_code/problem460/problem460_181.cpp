// #define _DEBUG

#include <bits/stdc++.h>
using namespace std;

using ll = long long;

#ifdef _DEBUG
#define dump(x) cerr << #x << "=" << x << endl
#else
#define dump(x)
#endif
#ifdef _DEBUG
#define dump2(x, y) cerr << #x << "=" << x << "," << #y << "=" << y << endl
#else
#define dump2(x, y)
#endif

#define rep(i, n) for (ll i = 0; i < (int)(n); i++)
#define all(x) (x).begin(), (x).end()
#define sz(x) ((int)(x).size())
#define unique(v) v.erase(unique(v.begin(), v.end()), v.end());

ll gcd(ll a, ll b) { return b ? gcd(b, a % b) : a; }

void getAnswer(ll &answer, ll w1, ll w2, ll w3, ll h1, ll h2, ll h3) {
  ll smax = max(w1 * h1, max(w2 * h2, w3 * h3));
  ll smin = min(w1 * h1, min(w2 * h2, w3 * h3));
  answer = smax - smin;
  dump2(w1, h1);
  dump2(w2, h2);
  dump2(w3, h3);
  dump(smax);
  dump(smin);
  dump(answer);
}

void solve(ll H, ll W) {
  ll w1, w2, w3;
  ll h1, h2, h3;

  // 1. 縦割り
  switch (W % 3) {
  case 2:
    w1 = w2 = W / 3 + 1;
    w3 = W / 3;
    break;
  case 1:
    w1 = W / 3 + 1;
    w2 = w3 = W / 3;
    break;
  case 0:
    w1 = w2 = w3 = W / 3;
    break;
  }
  h1 = h2 = h3 = H;
  ll answer1;
  getAnswer(answer1, w1, w2, w3, h1, h2, h3);

  // 2. 横割り
  switch (H % 3) {
  case 2:
    h1 = h2 = H / 3 + 1;
    h3 = H / 3;
    break;
  case 1:
    h1 = H / 3 + 1;
    h2 = h3 = H / 3;
    break;
  case 0:
    h1 = h2 = h3 = H / 3;
    break;
  }
  w1 = w2 = w3 = W;
  ll answer2;
  getAnswer(answer2, w1, w2, w3, h1, h2, h3);

  // 3.縦大
  h1 = H;
  switch (H % 2) {
  case 1:
    h2 = H / 2 + 1;
    h3 = H / 2;
    break;
  case 0:
    h2 = h3 = H / 2;
    break;
  }
  w2 = w3 = (W / 3) * 2 + 1;
  w1 = W - w2;
  ll answer3;
  getAnswer(answer3, w1, w2, w3, h1, h2, h3);

  // 4.横大
  w1 = W;
  switch (W % 2) {
  case 1:
    w2 = W / 2 + 1;
    w3 = W / 2;
    break;
  case 0:
    w2 = w3 = W / 2;
    break;
  }
  h2 = h3 = (H / 3) * 2 + 1;
  h1 = H - h2;
  ll answer4;
  getAnswer(answer4, w1, w2, w3, h1, h2, h3);

  dump(answer1);
  dump(answer2);
  dump(answer3);
  dump(answer4);

  ll answer = min(answer1, min(answer2, min(answer3, answer4)));
  cout << answer << endl;
}

// Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips:
// You use the default template now. You can remove this line by using your
// custom template)
int main() {
  ll H;
  scanf("%lld", &H);
  ll W;
  scanf("%lld", &W);
  solve(H, W);
  return 0;
}
