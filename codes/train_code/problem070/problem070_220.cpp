#define _DEBUG 1

#include <bits/stdc++.h>
using namespace std;

using ll = long long;

#ifdef _DEBUG
#define dump(x) cerr << #x << "=" << x << endl
#define dump2(x, y) cerr << #x << "=" << x << "," << #y << "=" << y << endl
#define check(s) cerr << s << endl
#else
#define dump(x)
#define dump2(x, y)
#define check(s)
#endif

#define rep(i, n) for (ll i = 0; i < (int)(n); i++)
#define all(x) (x).begin(), (x).end()
#define sz(x) ((int)(x).size())
#define unique(v) v.erase(unique(v.begin(), v.end()), v.end());

ll gcd(ll a, ll b) { return b ? gcd(b, a % b) : a; }

void solve(ll X, ll A, ll B) {
  if (A - B >= 0) {
    cout << "delicious" << endl;
    // } else if (B - A <= X) {
  } else if (A - B + X >= 0) {
    cout << "safe" << endl;
  } else {
    cout << "dangerous" << endl;
  }
}

// Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You
// use the default template now. You can remove this line by using your custom
// template)
int main() {
  ll X;
  scanf("%lld", &X);
  ll A;
  scanf("%lld", &A);
  ll B;
  scanf("%lld", &B);
  solve(X, A, B);
  return 0;
}
